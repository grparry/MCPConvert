ENDPOINT: Guru API - https://api.getguru.com/api/v1/swagger.json
----------------------------------------
RESPONSE:
{"success":true,"errorMessage":null,"mcpJson":"{\n  \"schema\": \"mcp\",\n  \"version\": \"0.1.0\",\n  \"metadata\": {\n    \"title\": \"Guru API\",\n    \"description\": \"\",\n    \"version\": \"v1\"\n  },\n  \"tools\": [\n    {\n      \"name\": \"post:/v1/agents/request\",\n      \"description\": \"POST /api/v1/agents/{agentId}/request\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"agentId\": {\n            \"description\": \"Agent ID\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"The Agent request\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"prompt\": {\n                \"type\": \"string\",\n                \"description\": \"prompt\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"agentId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/teams/analytics/getAnalytics\",\n      \"description\": \"Returns all events for the team. Date range parameters can be added. A maximum of 500 events will be returned.  If more than 500 events exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"teamId\": {\n            \"description\": \"teamId\",\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"description\": \"token\",\n            \"type\": \"string\"\n          },\n          \"fromDate\": {\n            \"description\": \"fromDate\",\n            \"type\": \"string\"\n          },\n          \"toDate\": {\n            \"description\": \"toDate\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"teamId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/announcements/getTeamAnnouncements\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      }\n    },\n    {\n      \"name\": \"get:/v1/announcements/getAnnouncement\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"announcementId\": {\n            \"description\": \"Announcement ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"announcementId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/announcements/getAnnouncementStatFull\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"announcementId\": {\n            \"description\": \"Announcement ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"announcementId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/announcements/getAnnouncementStatSummary\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"announcementId\": {\n            \"description\": \"Announcement ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"announcementId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/announcements/getAnnouncementStatUsers\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"announcementId\": {\n            \"description\": \"Announcement ID\",\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"announcementId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/answers/createAnswer\",\n      \"description\": \"Ask Guru a question, and receive an AI-generated answer with up to three source records.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"The Answer query spec\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"question\": {\n                \"type\": \"string\",\n                \"description\": \"question\"\n              },\n              \"collectionIds\": {\n                \"type\": \"array\",\n                \"description\": \"collectionIds\"\n              },\n              \"sourceIds\": {\n                \"type\": \"array\",\n                \"description\": \"sourceIds\"\n              },\n              \"agentId\": {\n                \"type\": \"string\",\n                \"description\": \"agentId\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/answers/archiveAnswer\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"ID of Answer\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/answers/assignExpert\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"ID of Answer\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Answer assignment information\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"assignee\": {\n                \"type\": \"object\",\n                \"description\": \"assignee\"\n              },\n              \"note\": {\n                \"type\": \"string\",\n                \"description\": \"note\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/answers/unassignExpert\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"ID of Answer\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/answers/getBoostedDocuments\",\n      \"description\": \"Search across Guru for boosted documents based on question\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"ID of Answer\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/answers/boostDocuments\",\n      \"description\": \"Persist a set of document ids to be used in the answer generation process\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"ID of Answer\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"List of document to boost\",\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/answers/restoreAnswer\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"ID of Answer\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/getOpenAPI\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      }\n    },\n    {\n      \"name\": \"get:/v1/getSwagger\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      }\n    },\n    {\n      \"name\": \"get:/v1/assistants/getAssistants\",\n      \"description\": \"GET /api/v1/assistants\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"role\": {\n            \"description\": \"role\",\n            \"type\": \"array\"\n          },\n          \"allowInSearchBar\": {\n            \"description\": \"filter on allowInSearchBar value\",\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"post:/v1/assistants/createAssistant\",\n      \"description\": \"POST /api/v1/assistants\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"Search Assistant\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"name\"\n              },\n              \"generativeConfig\": {\n                \"type\": \"object\",\n                \"description\": \"generativeConfig\"\n              },\n              \"sources\": {\n                \"type\": \"array\",\n                \"description\": \"sources\"\n              },\n              \"collections\": {\n                \"type\": \"array\",\n                \"description\": \"collections\"\n              },\n              \"dateCreated\": {\n                \"type\": \"string\",\n                \"description\": \"dateCreated\"\n              },\n              \"createdBy\": {\n                \"type\": \"object\",\n                \"description\": \"createdBy\"\n              },\n              \"isDefault\": {\n                \"type\": \"boolean\",\n                \"description\": \"isDefault\"\n              },\n              \"useAllSources\": {\n                \"type\": \"boolean\",\n                \"description\": \"useAllSources\"\n              },\n              \"imageUrl\": {\n                \"type\": \"string\",\n                \"description\": \"imageUrl\"\n              },\n              \"urls\": {\n                \"type\": \"array\",\n                \"description\": \"urls\"\n              },\n              \"limitSlackResponsesToAllMembersContent\": {\n                \"type\": \"boolean\",\n                \"description\": \"limitSlackResponsesToAllMembersContent\"\n              },\n              \"legacyMode\": {\n                \"type\": \"boolean\",\n                \"description\": \"legacyMode\"\n              },\n              \"allowInSearchBar\": {\n                \"type\": \"boolean\",\n                \"description\": \"allowInSearchBar\"\n              },\n              \"permissions\": {\n                \"type\": \"array\",\n                \"description\": \"permissions\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/assistants/getAssistantById\",\n      \"description\": \"GET /api/v1/assistants/{assistantId}\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"assistantId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/assistants/updateAssistant\",\n      \"description\": \"PUT /api/v1/assistants/{assistantId}\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Search Assistant\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"name\"\n              },\n              \"generativeConfig\": {\n                \"type\": \"object\",\n                \"description\": \"generativeConfig\"\n              },\n              \"sources\": {\n                \"type\": \"array\",\n                \"description\": \"sources\"\n              },\n              \"collections\": {\n                \"type\": \"array\",\n                \"description\": \"collections\"\n              },\n              \"dateCreated\": {\n                \"type\": \"string\",\n                \"description\": \"dateCreated\"\n              },\n              \"createdBy\": {\n                \"type\": \"object\",\n                \"description\": \"createdBy\"\n              },\n              \"isDefault\": {\n                \"type\": \"boolean\",\n                \"description\": \"isDefault\"\n              },\n              \"useAllSources\": {\n                \"type\": \"boolean\",\n                \"description\": \"useAllSources\"\n              },\n              \"imageUrl\": {\n                \"type\": \"string\",\n                \"description\": \"imageUrl\"\n              },\n              \"urls\": {\n                \"type\": \"array\",\n                \"description\": \"urls\"\n              },\n              \"limitSlackResponsesToAllMembersContent\": {\n                \"type\": \"boolean\",\n                \"description\": \"limitSlackResponsesToAllMembersContent\"\n              },\n              \"legacyMode\": {\n                \"type\": \"boolean\",\n                \"description\": \"legacyMode\"\n              },\n              \"allowInSearchBar\": {\n                \"type\": \"boolean\",\n                \"description\": \"allowInSearchBar\"\n              },\n              \"permissions\": {\n                \"type\": \"array\",\n                \"description\": \"permissions\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"assistantId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/assistants/deleteAssistantById\",\n      \"description\": \"DELETE /api/v1/assistants/{assistantId}\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"assistantId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/assistants/getAssistantExpertUsersAndGroups\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"search\": {\n            \"description\": \"Search term\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"assistantId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/assistants/getAssistantAccess\",\n      \"description\": \"GET /api/v1/assistants/{assistantId}/groups\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"assistantId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/assistants/createAssistantAccess\",\n      \"description\": \"POST /api/v1/assistants/{assistantId}/groups\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Group assistant access\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"group\": {\n                \"type\": \"object\",\n                \"description\": \"group\"\n              },\n              \"role\": {\n                \"type\": \"string\",\n                \"description\": \"role\"\n              },\n              \"objectRole\": {\n                \"type\": \"object\",\n                \"description\": \"objectRole\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"assistantId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/assistants/updateAssistantAccess\",\n      \"description\": \"PUT /api/v1/assistants/{assistantId}/groups/{groupId}\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          },\n          \"groupId\": {\n            \"description\": \"Group ID\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Group assistant access\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"group\": {\n                \"type\": \"object\",\n                \"description\": \"group\"\n              },\n              \"role\": {\n                \"type\": \"string\",\n                \"description\": \"role\"\n              },\n              \"objectRole\": {\n                \"type\": \"object\",\n                \"description\": \"objectRole\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"assistantId\",\n          \"groupId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/assistants/deleteAssistantAccess\",\n      \"description\": \"DELETE /api/v1/assistants/{assistantId}/groups/{groupId}\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          },\n          \"groupId\": {\n            \"description\": \"Group ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"assistantId\",\n          \"groupId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/assistants/setAssistantImage\",\n      \"description\": \"POST /api/v1/assistants/{assistantId}/image\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"assistantId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/assistants/deleteAssistantImage\",\n      \"description\": \"DELETE /api/v1/assistants/{assistantId}/image\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"assistantId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/assistants/getPages\",\n      \"description\": \"GET /api/v1/assistants/{assistantId}/pages\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"assistantId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/assistants/getAnswerSubscriptions\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          },\n          \"slackSetupId\": {\n            \"description\": \"slackSetupId\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"assistantId\",\n          \"slackSetupId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/assistants/createAnswerSubscription\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          },\n          \"slackSetupId\": {\n            \"description\": \"slackSetupId\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Request body\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"slackChannelName\": {\n                \"type\": \"string\",\n                \"description\": \"slackChannelName\"\n              },\n              \"slackChannelId\": {\n                \"type\": \"string\",\n                \"description\": \"slackChannelId\"\n              },\n              \"collections\": {\n                \"type\": \"array\",\n                \"description\": \"collections\"\n              },\n              \"sources\": {\n                \"type\": \"array\",\n                \"description\": \"sources\"\n              },\n              \"isPrivateChannel\": {\n                \"type\": \"boolean\",\n                \"description\": \"isPrivateChannel\"\n              },\n              \"assistantId\": {\n                \"type\": \"string\",\n                \"description\": \"assistantId\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"assistantId\",\n          \"slackSetupId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/assistants/getSlackChannels\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          },\n          \"slackSetupId\": {\n            \"description\": \"slackSetupId\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"assistantId\",\n          \"slackSetupId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/assistants/testPrompt\",\n      \"description\": \"POST /api/v1/assistants/{assistantId}/testprompt\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"The Prompt Test Spec\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"question\": {\n                \"type\": \"string\",\n                \"description\": \"question\"\n              },\n              \"generativeConfig\": {\n                \"type\": \"object\",\n                \"description\": \"generativeConfig\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"assistantId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/assistants/getUrlsByAssistant\",\n      \"description\": \"GET /api/v1/assistants/{assistantId}/urls\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"assistantId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/assistants/addUrlToAssistant\",\n      \"description\": \"POST /api/v1/assistants/{assistantId}/urls\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Search Assistant Url\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"name\"\n              },\n              \"url\": {\n                \"type\": \"string\",\n                \"description\": \"url\"\n              },\n              \"assistants\": {\n                \"type\": \"array\",\n                \"description\": \"assistants\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"assistantId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/assistants/updateAssistantUrl\",\n      \"description\": \"PUT /api/v1/assistants/{assistantId}/urls/{urlId}\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          },\n          \"urlId\": {\n            \"description\": \"URL ID\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Search Assistant Url\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"name\"\n              },\n              \"url\": {\n                \"type\": \"string\",\n                \"description\": \"url\"\n              },\n              \"assistants\": {\n                \"type\": \"array\",\n                \"description\": \"assistants\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"assistantId\",\n          \"urlId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/assistants/removeUrlFromAssistant\",\n      \"description\": \"DELETE /api/v1/assistants/{assistantId}/urls/{urlId}\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"assistantId\": {\n            \"description\": \"Search Assistant ID\",\n            \"type\": \"string\"\n          },\n          \"urlId\": {\n            \"description\": \"URL ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"assistantId\",\n          \"urlId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/boards/getBoards\",\n      \"description\": \"Returns all undeleted boards  the current user has access to.  A maximum of 110 boards will be returned.  If more than 110 boards exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"sortField\": {\n            \"description\": \"Sort Field\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"title\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastModified\"\n              }\n            ]\n          },\n          \"sortOrder\": {\n            \"description\": \"Sort Order\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ASC\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"DESC\"\n              }\n            ]\n          },\n          \"q\": {\n            \"description\": \"Query\",\n            \"type\": \"string\"\n          },\n          \"search\": {\n            \"description\": \"Search Term\",\n            \"type\": \"string\"\n          },\n          \"collection\": {\n            \"description\": \"Collection\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"post:/v1/boards/createNewBoard\",\n      \"description\": \"Title is required\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"Board data\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"boardGroupId\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the Board Group that this Board belongs to\"\n              },\n              \"removed\": {\n                \"type\": \"boolean\",\n                \"description\": \"Boolean flag if this Board has been removed\"\n              },\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the directory\"\n              },\n              \"lastModified\": {\n                \"type\": \"string\",\n                \"description\": \"The date that the directory was last modified\"\n              },\n              \"collection\": {\n                \"type\": \"object\",\n                \"description\": \"collection\"\n              },\n              \"lastModifiedBy\": {\n                \"type\": \"object\",\n                \"description\": \"lastModifiedBy\"\n              },\n              \"favoritedDate\": {\n                \"type\": \"string\",\n                \"description\": \"When this directory has been favorited by the current user\"\n              },\n              \"slug\": {\n                \"type\": \"string\",\n                \"description\": \"The slug is the URL address to the directory\"\n              },\n              \"groupsSharedWith\": {\n                \"type\": \"array\",\n                \"description\": \"Returns the groups that a directory is shared with\"\n              },\n              \"numberOfFacts\": {\n                \"type\": \"integer\",\n                \"description\": \"The number of cards in the directory\"\n              },\n              \"favorited\": {\n                \"type\": \"boolean\",\n                \"description\": \"Whether this board has been favorited by the current user\"\n              },\n              \"description\": {\n                \"type\": \"string\",\n                \"description\": \"An optional short description of the directory\"\n              },\n              \"title\": {\n                \"type\": \"string\",\n                \"description\": \"The title of the directory\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/boards/getBoard\",\n      \"description\": \"Including a Board's ID will load information about a single board with its cards and sections. With this call, you can also return a 'Home Board', which is what we call the structure that lists what Boards and Board Groups exist within a collection. To return this information, set the `boardId` to `home` and include a `collection` param set to the collection's ID.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"boardId\": {\n            \"description\": \"The ID of the board\",\n            \"type\": \"string\"\n          },\n          \"collection\": {\n            \"description\": \"The ID of the collection\",\n            \"type\": \"string\"\n          },\n          \"lite\": {\n            \"description\": \"lite\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"boardId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/cards/comments/getComments\",\n      \"description\": \"Returns all undeleted card comments accessible to the authenticated user.  A maximum of 25 card comments will be returned.  If more than 25 card comments exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"description\": \"status\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"OPEN\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"RESOLVED\"\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"cardId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/cards/comments/createComment\",\n      \"description\": \"Comment content is required\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Card comment data\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"ID of the comment\"\n              },\n              \"totalReplies\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of total replies on the comment\"\n              },\n              \"replies\": {\n                \"type\": \"array\",\n                \"description\": \"The most recent replies to the comment. If the totalReplies property is greater than the number of replies in this list, additional replies can be found through the Get Replies endpoint.\"\n              },\n              \"extraDetailsModel\": {\n                \"type\": \"object\",\n                \"description\": \"extraDetailsModel\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"Status of the comment\"\n              },\n              \"content\": {\n                \"type\": \"string\",\n                \"description\": \"Comment content (max length: 2500 characters)\"\n              },\n              \"owner\": {\n                \"type\": \"object\",\n                \"description\": \"owner\"\n              },\n              \"lastModified\": {\n                \"type\": \"string\",\n                \"description\": \"Date the comment was last modified. Dates are in ISO-8601 format. Example date (January 2nd 2014 12pm UTC): 2014-01-02T12:00:00.000+0000\"\n              },\n              \"deleted\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if the comment has been deleted\"\n              },\n              \"dateCreated\": {\n                \"type\": \"string\",\n                \"description\": \"Date the comment was created. Dates are in ISO-8601 format. Example date (January 2nd 2014 12pm UTC): 2014-01-02T12:00:00.000+0000\"\n              },\n              \"reactions\": {\n                \"type\": \"array\",\n                \"description\": \"reactions\"\n              }\n            },\n            \"required\": [\n              \"content\"\n            ]\n          }\n        },\n        \"required\": [\n          \"cardId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/cards/comments/deleteComment\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          },\n          \"commentId\": {\n            \"description\": \"The ID of the comment\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"cardId\",\n          \"commentId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/cards/verifiers/getVerifiers\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"cardId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/cards/verifiers/upsertVerifier\",\n      \"description\": \"Create a card verifier and delete all existing verifiers\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"List of card verifiers\",\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"cardId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/cards/verifiers/getVerifier\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          },\n          \"verifierId\": {\n            \"description\": \"The email address of the verifier\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"cardId\",\n          \"verifierId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/cards/createExtendedFact\",\n      \"description\": \"Content and title are required. Card share status should be set to TEAM to make a card team shared.  Omitting the share status value or setting it to PRIVATE will result in a card that is only accessible by the card owner. This endpoint allows the verifier to be set upon card creation, rather than requiring a separate call.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"Card data\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"folderIds\": {\n                \"type\": \"array\",\n                \"description\": \"One or more folder IDs to which the new card should be added on creation\"\n              },\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"ID of the Card\"\n              },\n              \"content\": {\n                \"type\": \"string\",\n                \"description\": \"The Card's HTML or Markdown content\"\n              },\n              \"owner\": {\n                \"type\": \"object\",\n                \"description\": \"owner\"\n              },\n              \"lastModified\": {\n                \"type\": \"string\",\n                \"description\": \"Date the Card was last modified\"\n              },\n              \"version\": {\n                \"type\": \"integer\",\n                \"description\": \"Current version of the Card. As the card gets updated and revised, the version number will increase.\"\n              },\n              \"collection\": {\n                \"type\": \"object\",\n                \"description\": \"collection\"\n              },\n              \"dateCreated\": {\n                \"type\": \"string\",\n                \"description\": \"Date the Card was created\"\n              },\n              \"preferredPhrase\": {\n                \"type\": \"string\",\n                \"description\": \"The title of the Card\"\n              },\n              \"boards\": {\n                \"type\": \"array\",\n                \"description\": \"Returns Board objects that this card appears on\"\n              },\n              \"lastVerified\": {\n                \"type\": \"string\",\n                \"description\": \"Date the Card was last verified\"\n              },\n              \"lastVerifiedBy\": {\n                \"type\": \"object\",\n                \"description\": \"lastVerifiedBy\"\n              },\n              \"lastModifiedBy\": {\n                \"type\": \"object\",\n                \"description\": \"lastModifiedBy\"\n              },\n              \"favoritedDate\": {\n                \"type\": \"string\",\n                \"description\": \"Date when this card has been favorited by the current user\"\n              },\n              \"slug\": {\n                \"type\": \"string\",\n                \"description\": \"The slug is the URL address to the card\"\n              },\n              \"shareStatus\": {\n                \"type\": \"string\",\n                \"description\": \"The share status of the Card.  TEAM for team shared cards and PRIVATE for privately shared cards\"\n              },\n              \"suppressVerification\": {\n                \"type\": \"boolean\",\n                \"description\": \"Flag for enabling card verification on save\"\n              },\n              \"verificationInterval\": {\n                \"type\": \"integer\",\n                \"description\": \"Time interval (in days), indicating the frequency that this card needs re-verification. Passing in null will default to 30 days.\"\n              },\n              \"verifiers\": {\n                \"type\": \"array\",\n                \"description\": \"Users/Groups that are responsible for verifying this card\"\n              },\n              \"verificationType\": {\n                \"type\": \"string\",\n                \"description\": \"Whether the card's verification date is ABSOLUTE or RELATIVE\"\n              },\n              \"collaborators\": {\n                \"type\": \"array\",\n                \"description\": \"Users/Groups that this card is explicitly shared to. Collaborators of a card are the only ones who have access if the Card's shareStatus is PRIVATE.\"\n              },\n              \"verificationState\": {\n                \"type\": \"string\",\n                \"description\": \"Whether the card is TRUSTED, STALE, or NEEDS_VERIFICATION\"\n              },\n              \"verificationReason\": {\n                \"type\": \"string\",\n                \"description\": \"Reason this card needs verification.  UPDATE if this card was updated by a user that is not the verifier. NEW_VERIFIER if this card was assigned to a new verifier but has not yet been verified.  This value will only be present if the verification state is NEEDS_VERIFICATION\"\n              },\n              \"favorited\": {\n                \"type\": \"boolean\",\n                \"description\": \"Whether this card has been favorited by the current user\"\n              },\n              \"publicLinkAllowed\": {\n                \"type\": \"boolean\",\n                \"description\": \"publicLinkAllowed\"\n              },\n              \"archived\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if the Card has been archived\"\n              },\n              \"cardType\": {\n                \"type\": \"string\",\n                \"description\": \"The type of the Card. CARD for content cards, QUESTION for Questions.\"\n              },\n              \"nextVerificationDate\": {\n                \"type\": \"string\",\n                \"description\": \"Next date that this Card needs verification dependent on verification interval\"\n              },\n              \"originalOwner\": {\n                \"type\": \"object\",\n                \"description\": \"originalOwner\"\n              },\n              \"lastViewed\": {\n                \"type\": \"string\",\n                \"description\": \"Last time the card was viewed\"\n              },\n              \"attachments\": {\n                \"type\": \"array\",\n                \"description\": \"Attachments to the card\"\n              },\n              \"verificationReasons\": {\n                \"type\": \"array\",\n                \"description\": \"verificationReasons\"\n              },\n              \"verificationInitiator\": {\n                \"type\": \"object\",\n                \"description\": \"verificationInitiator\"\n              },\n              \"commentCount\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of comments on the card\"\n              },\n              \"cardInfo\": {\n                \"type\": \"object\",\n                \"description\": \"cardInfo\"\n              },\n              \"syncInfo\": {\n                \"type\": \"object\",\n                \"description\": \"syncInfo\"\n              },\n              \"verificationInitiationDate\": {\n                \"type\": \"string\",\n                \"description\": \"Date corresponding to the action that unverified the card\"\n              },\n              \"cardTemplateId\": {\n                \"type\": \"string\",\n                \"description\": \"ID of the template from which this card was created if applicable\"\n              },\n              \"folderCount\": {\n                \"type\": \"integer\",\n                \"description\": \"The number of folders this card is in\"\n              },\n              \"answerId\": {\n                \"type\": \"string\",\n                \"description\": \"answerId\"\n              },\n              \"commentsEnabled\": {\n                \"type\": \"boolean\",\n                \"description\": \"A flag to indicate if comments are allowed on this Card\"\n              },\n              \"pendingAutoArchive\": {\n                \"type\": \"boolean\",\n                \"description\": \"A flag to indicate if this unverified card is currently in an auto archive queue\"\n              },\n              \"settingsUpdate\": {\n                \"type\": \"boolean\",\n                \"description\": \"A flag to indicate if the changes are only updating the settings of the card\"\n              },\n              \"tags\": {\n                \"type\": \"array\",\n                \"description\": \"Returns Tag objects associated with this card\"\n              }\n            },\n            \"required\": [\n              \"content\",\n              \"preferredPhrase\"\n            ]\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/cards/getVerificationManager\",\n      \"description\": \"Returns all unverified cards accessible by the authenticated user.  A maximum of 50 cards will be returned.  If more than 50 cards exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"maxResults\": {\n            \"description\": \"Maximum results to return\",\n            \"type\": \"integer\"\n          },\n          \"sortField\": {\n            \"description\": \"Sort field\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastModified\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastModifiedBy\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"boardCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"verificationState\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"copyCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"viewCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"favoriteCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"followerCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"dateCreated\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"verificationInterval\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"verifier\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"owner\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"originalOwner\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastVerifiedBy\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastVerified\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"verificationReason\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"popularity\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"unverifiedViewsCopies\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"nextVerificationDate\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"collection\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"title\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"followedDate\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"pendingAutoArchive\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"relevancy\"\n              }\n            ]\n          },\n          \"sortOrder\": {\n            \"description\": \"Sort order\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ASC\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"DESC\"\n              }\n            ]\n          },\n          \"fieldDetail\": {\n            \"description\": \"Specifies the level of detail included in cards.  Default value is FULL\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"BASIC\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"FULL\"\n              }\n            ]\n          },\n          \"pendingAutoArchive\": {\n            \"description\": \"Filter the results for cards that are or are not pending auto archive\",\n            \"type\": \"boolean\"\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"delete:/v1/cards/deleteFact\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"cardId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/cards/getFactBoards\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"cardId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/cards/getExtendedFact\",\n      \"description\": \"Load the card and the card teams and collaborators.  If there are more than 25 teams or collaborators, a Link header will be provided for the next page of results.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"cardId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/cards/updateExtendedFact\",\n      \"description\": \"This endpoint allows the verifier to be set upon card creation, rather than requiring a separate call. Content and title are required. Card share status should be set to TEAM to make a card team shared. Omitting the share status value or setting it to PRIVATE will result in a card that is only accessible by the card owner. If tags are omitted or an empty list, then all existing tags will be removed from the card.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          },\n          \"notify\": {\n            \"description\": \"Notify card content followers\",\n            \"type\": \"boolean\"\n          },\n          \"body\": {\n            \"description\": \"Card data\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"ID of the Card\"\n              },\n              \"content\": {\n                \"type\": \"string\",\n                \"description\": \"The Card's HTML or Markdown content\"\n              },\n              \"owner\": {\n                \"type\": \"object\",\n                \"description\": \"owner\"\n              },\n              \"lastModified\": {\n                \"type\": \"string\",\n                \"description\": \"Date the Card was last modified\"\n              },\n              \"version\": {\n                \"type\": \"integer\",\n                \"description\": \"Current version of the Card. As the card gets updated and revised, the version number will increase.\"\n              },\n              \"collection\": {\n                \"type\": \"object\",\n                \"description\": \"collection\"\n              },\n              \"dateCreated\": {\n                \"type\": \"string\",\n                \"description\": \"Date the Card was created\"\n              },\n              \"preferredPhrase\": {\n                \"type\": \"string\",\n                \"description\": \"The title of the Card\"\n              },\n              \"boards\": {\n                \"type\": \"array\",\n                \"description\": \"Returns Board objects that this card appears on\"\n              },\n              \"lastVerified\": {\n                \"type\": \"string\",\n                \"description\": \"Date the Card was last verified\"\n              },\n              \"lastVerifiedBy\": {\n                \"type\": \"object\",\n                \"description\": \"lastVerifiedBy\"\n              },\n              \"lastModifiedBy\": {\n                \"type\": \"object\",\n                \"description\": \"lastModifiedBy\"\n              },\n              \"favoritedDate\": {\n                \"type\": \"string\",\n                \"description\": \"Date when this card has been favorited by the current user\"\n              },\n              \"slug\": {\n                \"type\": \"string\",\n                \"description\": \"The slug is the URL address to the card\"\n              },\n              \"shareStatus\": {\n                \"type\": \"string\",\n                \"description\": \"The share status of the Card.  TEAM for team shared cards and PRIVATE for privately shared cards\"\n              },\n              \"suppressVerification\": {\n                \"type\": \"boolean\",\n                \"description\": \"Flag for enabling card verification on save\"\n              },\n              \"verificationInterval\": {\n                \"type\": \"integer\",\n                \"description\": \"Time interval (in days), indicating the frequency that this card needs re-verification. Passing in null will default to 30 days.\"\n              },\n              \"verifiers\": {\n                \"type\": \"array\",\n                \"description\": \"Users/Groups that are responsible for verifying this card\"\n              },\n              \"verificationType\": {\n                \"type\": \"string\",\n                \"description\": \"Whether the card's verification date is ABSOLUTE or RELATIVE\"\n              },\n              \"collaborators\": {\n                \"type\": \"array\",\n                \"description\": \"Users/Groups that this card is explicitly shared to. Collaborators of a card are the only ones who have access if the Card's shareStatus is PRIVATE.\"\n              },\n              \"verificationState\": {\n                \"type\": \"string\",\n                \"description\": \"Whether the card is TRUSTED, STALE, or NEEDS_VERIFICATION\"\n              },\n              \"verificationReason\": {\n                \"type\": \"string\",\n                \"description\": \"Reason this card needs verification.  UPDATE if this card was updated by a user that is not the verifier. NEW_VERIFIER if this card was assigned to a new verifier but has not yet been verified.  This value will only be present if the verification state is NEEDS_VERIFICATION\"\n              },\n              \"favorited\": {\n                \"type\": \"boolean\",\n                \"description\": \"Whether this card has been favorited by the current user\"\n              },\n              \"publicLinkAllowed\": {\n                \"type\": \"boolean\",\n                \"description\": \"publicLinkAllowed\"\n              },\n              \"archived\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if the Card has been archived\"\n              },\n              \"cardType\": {\n                \"type\": \"string\",\n                \"description\": \"The type of the Card. CARD for content cards, QUESTION for Questions.\"\n              },\n              \"nextVerificationDate\": {\n                \"type\": \"string\",\n                \"description\": \"Next date that this Card needs verification dependent on verification interval\"\n              },\n              \"originalOwner\": {\n                \"type\": \"object\",\n                \"description\": \"originalOwner\"\n              },\n              \"lastViewed\": {\n                \"type\": \"string\",\n                \"description\": \"Last time the card was viewed\"\n              },\n              \"attachments\": {\n                \"type\": \"array\",\n                \"description\": \"Attachments to the card\"\n              },\n              \"verificationReasons\": {\n                \"type\": \"array\",\n                \"description\": \"verificationReasons\"\n              },\n              \"verificationInitiator\": {\n                \"type\": \"object\",\n                \"description\": \"verificationInitiator\"\n              },\n              \"commentCount\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of comments on the card\"\n              },\n              \"cardInfo\": {\n                \"type\": \"object\",\n                \"description\": \"cardInfo\"\n              },\n              \"syncInfo\": {\n                \"type\": \"object\",\n                \"description\": \"syncInfo\"\n              },\n              \"verificationInitiationDate\": {\n                \"type\": \"string\",\n                \"description\": \"Date corresponding to the action that unverified the card\"\n              },\n              \"cardTemplateId\": {\n                \"type\": \"string\",\n                \"description\": \"ID of the template from which this card was created if applicable\"\n              },\n              \"folderCount\": {\n                \"type\": \"integer\",\n                \"description\": \"The number of folders this card is in\"\n              },\n              \"answerId\": {\n                \"type\": \"string\",\n                \"description\": \"answerId\"\n              },\n              \"commentsEnabled\": {\n                \"type\": \"boolean\",\n                \"description\": \"A flag to indicate if comments are allowed on this Card\"\n              },\n              \"pendingAutoArchive\": {\n                \"type\": \"boolean\",\n                \"description\": \"A flag to indicate if this unverified card is currently in an auto archive queue\"\n              },\n              \"settingsUpdate\": {\n                \"type\": \"boolean\",\n                \"description\": \"A flag to indicate if the changes are only updating the settings of the card\"\n              },\n              \"tags\": {\n                \"type\": \"array\",\n                \"description\": \"Returns Tag objects associated with this card\"\n              }\n            },\n            \"required\": [\n              \"content\",\n              \"preferredPhrase\"\n            ]\n          }\n        },\n        \"required\": [\n          \"cardId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/cards/getFactFavoriteLists\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"cardId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/cards/getFactFolders\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"cardId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/cards/unverifyFact\",\n      \"description\": \"Mark the card with the given cardId as unverified\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"cardId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/cards/verify\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"cardId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/collections/getCollections\",\n      \"description\": \"Returns all undeleted collections accessible to the authenticated user\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"search\": {\n            \"description\": \"Search term\",\n            \"type\": \"string\"\n          },\n          \"sortField\": {\n            \"description\": \"Sort field\",\n            \"type\": \"string\"\n          },\n          \"sortDir\": {\n            \"description\": \"Sort order\",\n            \"type\": \"string\"\n          },\n          \"filter\": {\n            \"description\": \"Filter\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"get:/v1/collections/getPinnedCollections\",\n      \"description\": \"GET /api/v1/collections/pinnedCollections\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      }\n    },\n    {\n      \"name\": \"get:/v1/collections/getCollection\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"collectionId\": {\n            \"description\": \"The ID of the collection\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"collectionId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/collections/getCollectionAccessAuthors\",\n      \"description\": \"Get details of all groups with author access to a collection.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"collectionId\": {\n            \"description\": \"The ID of the collection\",\n            \"type\": \"string\"\n          },\n          \"search\": {\n            \"description\": \"Search by group name\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"collectionId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/collections/getCollectionAccess\",\n      \"description\": \"Get details of all groups with access to a collection.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"collectionId\": {\n            \"description\": \"The ID of the collection\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"collectionId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/collections/pinCollection\",\n      \"description\": \"POST /api/v1/collections/{collectionId}/pin\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"collectionId\": {\n            \"description\": \"The ID of the collection\",\n            \"type\": \"string\"\n          },\n          \"afterCollectionId\": {\n            \"description\": \"ID of collection after which to pin the given collection, or 'top' to pin to the top of the list\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"collectionId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/collections/unpinCollection\",\n      \"description\": \"POST /api/v1/collections/{collectionId}/unpin\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"collectionId\": {\n            \"description\": \"The ID of the collection\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"collectionId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/drafts/searchDrafts\",\n      \"description\": \"A maximum of 50 drafts will be returned.  If more than 50 drafts exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Request body\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"query\": {\n                \"type\": \"object\",\n                \"description\": \"query\"\n              },\n              \"collectionIds\": {\n                \"type\": \"array\",\n                \"description\": \"collectionIds\"\n              },\n              \"sorts\": {\n                \"type\": \"array\",\n                \"description\": \"sorts\"\n              },\n              \"queryType\": {\n                \"type\": \"string\",\n                \"description\": \"queryType\"\n              },\n              \"maxResults\": {\n                \"type\": \"integer\",\n                \"description\": \"maxResults\"\n              },\n              \"showArchived\": {\n                \"type\": \"boolean\",\n                \"description\": \"showArchived\"\n              },\n              \"searchTerms\": {\n                \"type\": \"string\",\n                \"description\": \"searchTerms\"\n              },\n              \"collectionUids\": {\n                \"type\": \"array\",\n                \"description\": \"collectionUids\"\n              },\n              \"sourceIds\": {\n                \"type\": \"array\",\n                \"description\": \"sourceIds\"\n              }\n            }\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"get:/v1/folders/getFolders\",\n      \"description\": \"Returns all undeleted folders  the current user has access to.  A maximum of 110 folders will be returned.  If more than 110 folders exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"sortField\": {\n            \"description\": \"Sort Field\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"title\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastModified\"\n              }\n            ]\n          },\n          \"sortOrder\": {\n            \"description\": \"Sort Order\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ASC\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"DESC\"\n              }\n            ]\n          },\n          \"q\": {\n            \"description\": \"Query\",\n            \"type\": \"string\"\n          },\n          \"search\": {\n            \"description\": \"Search Term\",\n            \"type\": \"string\"\n          },\n          \"collection\": {\n            \"description\": \"Collection\",\n            \"type\": \"string\"\n          },\n          \"folderIds\": {\n            \"description\": \"A comma-separated list of Folder IDs\",\n            \"type\": \"string\"\n          },\n          \"legacyTypes\": {\n            \"description\": \"A comma-separated list of Folder Legacy Types to filter by: BOARD_GROUP, BOARD or SECTION\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"post:/v1/folders/createNewFolder\",\n      \"description\": \"Title is required\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"Folder data\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"prevSiblingItemId\": {\n                \"type\": \"string\",\n                \"description\": \"The item id of the item after which this item should be added.  May also be 'first' or 'last' to indicate the first or last position respectively.  Defaults to 'last' if unspecified.\"\n              },\n              \"parentFolderId\": {\n                \"type\": \"string\",\n                \"description\": \"parentFolderId\"\n              },\n              \"home\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if this folder is the top level folder for the collection\"\n              },\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the directory\"\n              },\n              \"lastModified\": {\n                \"type\": \"string\",\n                \"description\": \"The date that the directory was last modified\"\n              },\n              \"collection\": {\n                \"type\": \"object\",\n                \"description\": \"collection\"\n              },\n              \"lastModifiedBy\": {\n                \"type\": \"object\",\n                \"description\": \"lastModifiedBy\"\n              },\n              \"favoritedDate\": {\n                \"type\": \"string\",\n                \"description\": \"When this directory has been favorited by the current user\"\n              },\n              \"slug\": {\n                \"type\": \"string\",\n                \"description\": \"The slug is the URL address to the directory\"\n              },\n              \"groupsSharedWith\": {\n                \"type\": \"array\",\n                \"description\": \"Returns the groups that a directory is shared with\"\n              },\n              \"numberOfFacts\": {\n                \"type\": \"integer\",\n                \"description\": \"The number of cards in the directory\"\n              },\n              \"favorited\": {\n                \"type\": \"boolean\",\n                \"description\": \"Whether this board has been favorited by the current user\"\n              },\n              \"description\": {\n                \"type\": \"string\",\n                \"description\": \"An optional short description of the directory\"\n              },\n              \"title\": {\n                \"type\": \"string\",\n                \"description\": \"The title of the directory\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/folders/folderSearch\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"terms\": {\n            \"description\": \"Search terms\",\n            \"type\": \"string\"\n          },\n          \"collectionId\": {\n            \"description\": \"The ID of a collection\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"terms\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/folders/getFolder\",\n      \"description\": \"Including a Folder's ID will load information about a single folder with its cards and sections. With this call, you can also return a 'Home Folder', which is what we call the structure that lists what Folders exist within a collection. To return this information, set the `folderId` to `homeBoardSlug` from the collection's response\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"folderId\": {\n            \"description\": \"The ID of the Folder\",\n            \"type\": \"string\"\n          },\n          \"collection\": {\n            \"description\": \"The ID of the collection\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"folderId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/folders/updateFolder\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"folderId\": {\n            \"description\": \"ID of the Folder\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Folder data\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"home\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates if this folder is the top level folder for the collection\"\n              },\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the directory\"\n              },\n              \"lastModified\": {\n                \"type\": \"string\",\n                \"description\": \"The date that the directory was last modified\"\n              },\n              \"collection\": {\n                \"type\": \"object\",\n                \"description\": \"collection\"\n              },\n              \"lastModifiedBy\": {\n                \"type\": \"object\",\n                \"description\": \"lastModifiedBy\"\n              },\n              \"favoritedDate\": {\n                \"type\": \"string\",\n                \"description\": \"When this directory has been favorited by the current user\"\n              },\n              \"slug\": {\n                \"type\": \"string\",\n                \"description\": \"The slug is the URL address to the directory\"\n              },\n              \"groupsSharedWith\": {\n                \"type\": \"array\",\n                \"description\": \"Returns the groups that a directory is shared with\"\n              },\n              \"numberOfFacts\": {\n                \"type\": \"integer\",\n                \"description\": \"The number of cards in the directory\"\n              },\n              \"favorited\": {\n                \"type\": \"boolean\",\n                \"description\": \"Whether this board has been favorited by the current user\"\n              },\n              \"description\": {\n                \"type\": \"string\",\n                \"description\": \"An optional short description of the directory\"\n              },\n              \"title\": {\n                \"type\": \"string\",\n                \"description\": \"The title of the directory\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"folderId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/folders/deleteFolder\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"folderId\": {\n            \"description\": \"ID of the Folder\",\n            \"type\": \"string\"\n          },\n          \"removeType\": {\n            \"description\": \"The Remove Type: Default is FOLDERS_ONLY\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"FOLDERS_ONLY\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"FOLDERS_AND_CARDS\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"PROMOTE_TO_PARENT\"\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"folderId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/folders/getEffectivePermissions\",\n      \"description\": \"Get permissions that are applied to a folder - this includes permissions configured on the folder itself, as well as permissions that are configured at a folder higher up in the hierarchy.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"folderId\": {\n            \"description\": \"folderId\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"folderId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/folders/getFolderItems\",\n      \"description\": \"Gets items (cards and folders) that live directly within a folder. A maximum of 50 folder items will be returned.  If more than 50 items exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"folderId\": {\n            \"description\": \"ID of the Folder\",\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"cardDetail\": {\n            \"description\": \"Specifies the level of detail included in card items.  Default value is BASIC\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"BASIC\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"FULL\"\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"folderId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/folders/getParentFolder\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"folderId\": {\n            \"description\": \"folderId\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"folderId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/folders/getFolderAsPDF\",\n      \"description\": \"Timeout set to 2 minutes. If you experience a timeout, please contact our support team\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"folderId\": {\n            \"description\": \"The ID of the folder\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"folderId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/folders/getFolderPermissions\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"folderId\": {\n            \"description\": \"folderId\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"folderId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/alerts/getDelegatedAlerts\",\n      \"description\": \"Returns all announcements owned by the authenticated user.  A maximum of 50 announcements will be returned.  If more than 50 announcements exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"sortField\": {\n            \"description\": \"Sort field\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"cardTitle\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"dateSent\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"percentRead\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"collection\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"sentBy\"\n              }\n            ]\n          },\n          \"sortOrder\": {\n            \"description\": \"Sort order\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ASC\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"DESC\"\n              }\n            ]\n          },\n          \"view\": {\n            \"description\": \"Alerts View\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ALL_SENT\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"MY_SENT\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ALL_SCHEDULED\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"MY_SCHEDULED\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"post:/v1/alerts/createAlert\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"Request body\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"dateCreated\": {\n                \"type\": \"string\",\n                \"description\": \"dateCreated\"\n              },\n              \"creator\": {\n                \"type\": \"object\",\n                \"description\": \"creator\"\n              },\n              \"cardId\": {\n                \"type\": \"string\",\n                \"description\": \"cardId\"\n              },\n              \"suppressNotifications\": {\n                \"type\": \"boolean\",\n                \"description\": \"suppressNotifications\"\n              },\n              \"note\": {\n                \"type\": \"string\",\n                \"description\": \"note\"\n              },\n              \"lastManualReminderDate\": {\n                \"type\": \"string\",\n                \"description\": \"lastManualReminderDate\"\n              },\n              \"lastAutomatedReminderDate\": {\n                \"type\": \"string\",\n                \"description\": \"lastAutomatedReminderDate\"\n              },\n              \"scheduledSendDate\": {\n                \"type\": \"string\",\n                \"description\": \"scheduledSendDate\"\n              },\n              \"groups\": {\n                \"type\": \"array\",\n                \"description\": \"groups\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/alerts/getAlert\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"alertId\": {\n            \"description\": \"Alert ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"alertId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/alerts/deleteAlert\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"alertId\": {\n            \"description\": \"The ID of the alert\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"alertId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/alerts/exportAlertUsers\",\n      \"description\": \"Initiates the export of user details for the announcement with the given announcementId.  Results will be emailed when available.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"alertId\": {\n            \"description\": \"The ID of the alert\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"alertId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/alerts/markAlertRead\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"alertId\": {\n            \"description\": \"The ID of the alert\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"alertId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/alerts/sendAlertReminder\",\n      \"description\": \"Sends announcement reminders to any users who have not yet read the announcement\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"alertId\": {\n            \"description\": \"The ID of the alert\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"alertId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/alerts/getAlertStatFull\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"alertId\": {\n            \"description\": \"Alert ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"alertId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/alerts/getAlertStatSummary\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"alertId\": {\n            \"description\": \"Alert ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"alertId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/alerts/getAlertStatUsers\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"alertId\": {\n            \"description\": \"Alert ID\",\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"alertId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/kcs/getKCS\",\n      \"description\": \"Returns all ticket links for the authenticated team.  A maximum of 25 ticket links will be returned.  If more than 25 ticket links exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"platform\": {\n            \"description\": \"Ticketing platform type\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ZENDESK\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"LIVEPERSON\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"SALESFORCE\"\n              }\n            ]\n          },\n          \"conversationId\": {\n            \"description\": \"The ID of the conversation\",\n            \"type\": \"string\"\n          },\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"description\": \"Email address\",\n            \"type\": \"string\"\n          },\n          \"startDate\": {\n            \"description\": \"Start date\",\n            \"type\": \"string\"\n          },\n          \"endDate\": {\n            \"description\": \"End date\",\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"post:/v1/kcs/createKCS\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"Request body\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"cardId\": {\n                \"type\": \"string\",\n                \"description\": \"cardId\"\n              },\n              \"conversationId\": {\n                \"type\": \"string\",\n                \"description\": \"conversationId\"\n              },\n              \"platform\": {\n                \"type\": \"string\",\n                \"description\": \"platform\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/kcs/addKCSApp\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"appType\": {\n            \"description\": \"Ticketing platform type\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ZENDESK\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"LIVEPERSON\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"SALESFORCE\"\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"appType\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/kcs/deleteKCSApp\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"appType\": {\n            \"description\": \"Ticketing platform type\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ZENDESK\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"LIVEPERSON\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"SALESFORCE\"\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"appType\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/kcs/getKCSApps\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      }\n    },\n    {\n      \"name\": \"delete:/v1/kcs/deleteKCS\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cardId\": {\n            \"description\": \"The ID of the card\",\n            \"type\": \"string\"\n          },\n          \"platform\": {\n            \"description\": \"Ticketing platform type\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ZENDESK\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"LIVEPERSON\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"SALESFORCE\"\n              }\n            ]\n          },\n          \"conversationId\": {\n            \"description\": \"The ID of the conversation\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"cardId\",\n          \"platform\",\n          \"conversationId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/oauthclients/setClientLogo\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"clientId\": {\n            \"description\": \"The ID of the OAuthClient\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"clientId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/people/getPerson\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"ID\",\n            \"type\": \"string\"\n          },\n          \"extended\": {\n            \"description\": \"Extended results\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/people/updatePerson\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"ID\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Person data\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"displayName\": {\n                \"type\": \"string\",\n                \"description\": \"displayName\"\n              },\n              \"directReports\": {\n                \"type\": \"array\",\n                \"description\": \"directReports\"\n              },\n              \"deleted\": {\n                \"type\": \"boolean\",\n                \"description\": \"deleted\"\n              },\n              \"pronouns\": {\n                \"type\": \"string\",\n                \"description\": \"pronouns\"\n              },\n              \"jobTitle\": {\n                \"type\": \"string\",\n                \"description\": \"jobTitle\"\n              },\n              \"workTeamName\": {\n                \"type\": \"string\",\n                \"description\": \"workTeamName\"\n              },\n              \"workTeamId\": {\n                \"type\": \"string\",\n                \"description\": \"workTeamId\"\n              },\n              \"workLocationName\": {\n                \"type\": \"string\",\n                \"description\": \"workLocationName\"\n              },\n              \"workLocationId\": {\n                \"type\": \"string\",\n                \"description\": \"workLocationId\"\n              },\n              \"workingHours\": {\n                \"type\": \"string\",\n                \"description\": \"workingHours\"\n              },\n              \"workingTimezone\": {\n                \"type\": \"string\",\n                \"description\": \"workingTimezone\"\n              },\n              \"phoneNumber\": {\n                \"type\": \"string\",\n                \"description\": \"phoneNumber\"\n              },\n              \"linkedInProfile\": {\n                \"type\": \"string\",\n                \"description\": \"linkedInProfile\"\n              },\n              \"slackProfileDetails\": {\n                \"type\": \"array\",\n                \"description\": \"slackProfileDetails\"\n              },\n              \"msTeamsProfileUrl\": {\n                \"type\": \"string\",\n                \"description\": \"msTeamsProfileUrl\"\n              },\n              \"manager\": {\n                \"type\": \"object\",\n                \"description\": \"manager\"\n              },\n              \"syncedFields\": {\n                \"type\": \"array\",\n                \"description\": \"syncedFields\"\n              },\n              \"totalNumDirectReports\": {\n                \"type\": \"integer\",\n                \"description\": \"totalNumDirectReports\"\n              },\n              \"synced\": {\n                \"type\": \"boolean\",\n                \"description\": \"synced\"\n              },\n              \"startDate\": {\n                \"type\": \"string\",\n                \"description\": \"startDate\"\n              },\n              \"userId\": {\n                \"type\": \"string\",\n                \"description\": \"userId\"\n              },\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"The identifier of this User\"\n              },\n              \"userProfile\": {\n                \"type\": \"object\",\n                \"description\": \"Specifies additional information about a Guru User\"\n              },\n              \"lastName\": {\n                \"type\": \"string\",\n                \"description\": \"The user's last name\"\n              },\n              \"firstName\": {\n                \"type\": \"string\",\n                \"description\": \"The user's first name\"\n              },\n              \"profilePicUrl\": {\n                \"type\": \"string\",\n                \"description\": \"The profile picture url for the user\"\n              },\n              \"joinedDate\": {\n                \"type\": \"string\",\n                \"description\": \"joinedDate\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"The status of a User can be ACTIVE or PENDING. The User must verify their email address to be considered ACTIVE.\"\n              },\n              \"email\": {\n                \"type\": \"string\",\n                \"description\": \"The user's email address\"\n              },\n              \"custom\": {\n                \"type\": \"object\",\n                \"description\": \"custom\"\n              }\n            },\n            \"required\": [\n              \"email\",\n              \"firstName\",\n              \"lastName\"\n            ]\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/people/getDirectReports\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"description\": \"User ID\",\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"userId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/roles/getRoles\",\n      \"description\": \"GET /api/v1/roles\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"objectTypeFilter\": {\n            \"description\": \"Filter for valid roles for object type\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"PAGE\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"PAGE_DRAFT\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"WS\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"AGENT\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"FOLDER\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"SOURCE\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"COLLECTION\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"CARD\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"GROUP\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"KT\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"get:/v1/roles/getRolesAndPermissions\",\n      \"description\": \"GET /api/v1/roles/permissions\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"roleType\": {\n            \"description\": \"Filter for valid roles for role type\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"USER\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"SYSTEM\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"get:/v1/search/querySearchCardMgr\",\n      \"description\": \"A maximum of 50 cards will be returned.  If more than 50 cards exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"q\": {\n            \"description\": \"Query String\",\n            \"type\": \"string\"\n          },\n          \"searchTerms\": {\n            \"description\": \"searchTerms\",\n            \"type\": \"string\"\n          },\n          \"queryType\": {\n            \"description\": \"queryType\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"cards\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"questions\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"archived\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"draft\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"legacy\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"search_cards\"\n              }\n            ]\n          },\n          \"showArchived\": {\n            \"description\": \"Include archived cards\",\n            \"type\": \"boolean\"\n          },\n          \"maxResults\": {\n            \"description\": \"Maximum results\",\n            \"type\": \"integer\"\n          },\n          \"sortField\": {\n            \"description\": \"Sort field\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastModified\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastModifiedBy\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"boardCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"verificationState\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"copyCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"viewCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"favoriteCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"followerCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"dateCreated\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"verificationInterval\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"verifier\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"owner\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"originalOwner\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastVerifiedBy\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastVerified\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"verificationReason\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"popularity\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"unverifiedViewsCopies\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"nextVerificationDate\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"collection\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"title\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"followedDate\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"pendingAutoArchive\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"relevancy\"\n              }\n            ]\n          },\n          \"sortOrder\": {\n            \"description\": \"Sort order\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ASC\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"DESC\"\n              }\n            ]\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"post:/v1/search/querySearchByJsonForCardManager\",\n      \"description\": \"A maximum of 50 cards will be returned.  If more than 50 cards exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Request body\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"query\": {\n                \"type\": \"object\",\n                \"description\": \"query\"\n              },\n              \"collectionIds\": {\n                \"type\": \"array\",\n                \"description\": \"collectionIds\"\n              },\n              \"sorts\": {\n                \"type\": \"array\",\n                \"description\": \"sorts\"\n              },\n              \"queryType\": {\n                \"type\": \"string\",\n                \"description\": \"queryType\"\n              },\n              \"maxResults\": {\n                \"type\": \"integer\",\n                \"description\": \"maxResults\"\n              },\n              \"showArchived\": {\n                \"type\": \"boolean\",\n                \"description\": \"showArchived\"\n              },\n              \"searchTerms\": {\n                \"type\": \"string\",\n                \"description\": \"searchTerms\"\n              },\n              \"collectionUids\": {\n                \"type\": \"array\",\n                \"description\": \"collectionUids\"\n              },\n              \"sourceIds\": {\n                \"type\": \"array\",\n                \"description\": \"sourceIds\"\n              }\n            }\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"post:/v1/search/keywordDocumentSearch\",\n      \"description\": \"Search across Guru and your connected Sources.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"Request body\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"includeFacets\": {\n                \"type\": \"boolean\",\n                \"description\": \"includeFacets\"\n              },\n              \"includeSnippets\": {\n                \"type\": \"boolean\",\n                \"description\": \"includeSnippets\"\n              },\n              \"includeContent\": {\n                \"type\": \"boolean\",\n                \"description\": \"includeContent\"\n              },\n              \"sourceTypes\": {\n                \"type\": \"array\",\n                \"description\": \"sourceTypes\"\n              },\n              \"agentId\": {\n                \"type\": \"string\",\n                \"description\": \"agentId\"\n              },\n              \"query\": {\n                \"type\": \"object\",\n                \"description\": \"query\"\n              },\n              \"collectionIds\": {\n                \"type\": \"array\",\n                \"description\": \"collectionIds\"\n              },\n              \"sorts\": {\n                \"type\": \"array\",\n                \"description\": \"sorts\"\n              },\n              \"queryType\": {\n                \"type\": \"string\",\n                \"description\": \"queryType\"\n              },\n              \"maxResults\": {\n                \"type\": \"integer\",\n                \"description\": \"maxResults\"\n              },\n              \"showArchived\": {\n                \"type\": \"boolean\",\n                \"description\": \"showArchived\"\n              },\n              \"searchTerms\": {\n                \"type\": \"string\",\n                \"description\": \"searchTerms\"\n              },\n              \"collectionUids\": {\n                \"type\": \"array\",\n                \"description\": \"collectionUids\"\n              },\n              \"sourceIds\": {\n                \"type\": \"array\",\n                \"description\": \"sourceIds\"\n              }\n            }\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"get:/v1/search/querySearch\",\n      \"description\": \"A maximum of 50 cards will be returned.  If more than 50 cards exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"q\": {\n            \"description\": \"Query String\",\n            \"type\": \"string\"\n          },\n          \"searchTerms\": {\n            \"description\": \"Search terms\",\n            \"type\": \"string\"\n          },\n          \"queryType\": {\n            \"description\": \"Query Type field\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"cards\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"questions\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"archived\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"draft\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"legacy\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"search_cards\"\n              }\n            ]\n          },\n          \"showArchived\": {\n            \"description\": \"Include archived cards\",\n            \"type\": \"boolean\"\n          },\n          \"maxResults\": {\n            \"description\": \"Maximum results\",\n            \"type\": \"integer\"\n          },\n          \"sortField\": {\n            \"description\": \"Sort field\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastModified\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastModifiedBy\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"boardCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"verificationState\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"copyCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"viewCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"favoriteCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"followerCount\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"dateCreated\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"verificationInterval\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"verifier\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"owner\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"originalOwner\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastVerifiedBy\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastVerified\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"verificationReason\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"popularity\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"unverifiedViewsCopies\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"nextVerificationDate\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"collection\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"title\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"followedDate\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"pendingAutoArchive\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"relevancy\"\n              }\n            ]\n          },\n          \"sortOrder\": {\n            \"description\": \"Sort order\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ASC\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"DESC\"\n              }\n            ]\n          },\n          \"includeCardAttributes\": {\n            \"description\": \"Include card attributes\",\n            \"type\": \"boolean\"\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"post:/v1/sources/setSourceIcon\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"sourceId\": {\n            \"description\": \"Source ID\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"sourceId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/teams/tagcategories/getTagCategories\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"teamId\": {\n            \"description\": \"The ID of the team\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"teamId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/teams/tagcategories/createTagCategory\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"teamId\": {\n            \"description\": \"The ID of the team\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Tag Category config\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"name\"\n              },\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"collection\": {\n                \"type\": \"object\",\n                \"description\": \"collection\"\n              },\n              \"dateCreated\": {\n                \"type\": \"string\",\n                \"description\": \"dateCreated\"\n              },\n              \"createdBy\": {\n                \"type\": \"object\",\n                \"description\": \"createdBy\"\n              },\n              \"defaultCategory\": {\n                \"type\": \"boolean\",\n                \"description\": \"defaultCategory\"\n              },\n              \"tags\": {\n                \"type\": \"array\",\n                \"description\": \"tags\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"teamId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/teams/tagcategories/createTag\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"teamId\": {\n            \"description\": \"The ID of the team\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Attribute config\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\",\n                \"description\": \"The name of the Tag\"\n              },\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the Tag\"\n              },\n              \"numberOfCards\": {\n                \"type\": \"integer\",\n                \"description\": \"The number of cards associated with this Tag\"\n              },\n              \"categoryId\": {\n                \"type\": \"string\",\n                \"description\": \"If the tag belongs to a category, this is the ID for the category\"\n              },\n              \"categoryName\": {\n                \"type\": \"string\",\n                \"description\": \"If the tag belongs to a category, this is the name for the category\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"teamId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/teams/tagcategories/getTag\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tagId\": {\n            \"description\": \"The ID of the tag\",\n            \"type\": \"string\"\n          },\n          \"teamId\": {\n            \"description\": \"The ID of the team\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"tagId\",\n          \"teamId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/teams/tagcategories/updateTag\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tagId\": {\n            \"description\": \"The ID of the tag\",\n            \"type\": \"string\"\n          },\n          \"teamId\": {\n            \"description\": \"The ID of the team\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Tag Config\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\",\n                \"description\": \"The name of the Tag\"\n              },\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the Tag\"\n              },\n              \"numberOfCards\": {\n                \"type\": \"integer\",\n                \"description\": \"The number of cards associated with this Tag\"\n              },\n              \"categoryId\": {\n                \"type\": \"string\",\n                \"description\": \"If the tag belongs to a category, this is the ID for the category\"\n              },\n              \"categoryName\": {\n                \"type\": \"string\",\n                \"description\": \"If the tag belongs to a category, this is the name for the category\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"tagId\",\n          \"teamId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/teams/tagcategories/updateTagCategory\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tagCategoryId\": {\n            \"description\": \"The ID of the tag category\",\n            \"type\": \"string\"\n          },\n          \"teamId\": {\n            \"description\": \"The ID of the team\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Tag Category Config\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"name\"\n              },\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"collection\": {\n                \"type\": \"object\",\n                \"description\": \"collection\"\n              },\n              \"dateCreated\": {\n                \"type\": \"string\",\n                \"description\": \"dateCreated\"\n              },\n              \"createdBy\": {\n                \"type\": \"object\",\n                \"description\": \"createdBy\"\n              },\n              \"defaultCategory\": {\n                \"type\": \"boolean\",\n                \"description\": \"defaultCategory\"\n              },\n              \"tags\": {\n                \"type\": \"array\",\n                \"description\": \"tags\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"tagCategoryId\",\n          \"teamId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/teams/tagcategories/deleteTagCategory\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tagCategoryId\": {\n            \"description\": \"The ID of the tag category\",\n            \"type\": \"string\"\n          },\n          \"teamId\": {\n            \"description\": \"The ID of the team\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"tagCategoryId\",\n          \"teamId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/tasks/getMentions\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"description\": \"token\",\n            \"type\": \"string\"\n          },\n          \"sortField\": {\n            \"description\": \"sortField\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"cardTitle\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"creator\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"dateSent\"\n              }\n            ]\n          },\n          \"sortOrder\": {\n            \"description\": \"sortOrder\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ASC\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"DESC\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"get:/v1/members/getTeamMembers\",\n      \"description\": \"Returns all team members.  A maximum of 50 team members will be returned.  If more than 50 team members exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"search\": {\n            \"description\": \"Search term\",\n            \"type\": \"string\"\n          },\n          \"sortField\": {\n            \"description\": \"Sort Field\",\n            \"type\": \"string\"\n          },\n          \"sortDir\": {\n            \"description\": \"Sort Direction\",\n            \"type\": \"string\"\n          },\n          \"userType\": {\n            \"description\": \"User Type Filter\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"get:/v1/teams/getTeamStats\",\n      \"description\": \"Team stats will include counts of trusted and unverified cards, as well as overall trust score and team card count.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"teamId\": {\n            \"description\": \"The ID of the team\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"teamId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/templates/getAllTemplatesByTeam\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"sortField\": {\n            \"description\": \"Sort the results based on the value of this field\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"TITLE\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"LAST_MODIFIED\"\n              }\n            ]\n          },\n          \"sortOrder\": {\n            \"description\": \"Defines the direction the results should be sorted\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ASC\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"DESC\"\n              }\n            ]\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"search\": {\n            \"description\": \"Search string\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"post:/v1/templates/createTemplate\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"Card template information\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"content\": {\n                \"type\": \"string\",\n                \"description\": \"content\"\n              },\n              \"lastModified\": {\n                \"type\": \"string\",\n                \"description\": \"lastModified\"\n              },\n              \"collection\": {\n                \"type\": \"object\",\n                \"description\": \"collection\"\n              },\n              \"dateCreated\": {\n                \"type\": \"string\",\n                \"description\": \"dateCreated\"\n              },\n              \"boards\": {\n                \"type\": \"array\",\n                \"description\": \"boards\"\n              },\n              \"lastModifiedBy\": {\n                \"type\": \"object\",\n                \"description\": \"lastModifiedBy\"\n              },\n              \"jsonContent\": {\n                \"type\": \"string\",\n                \"description\": \"jsonContent\"\n              },\n              \"createdBy\": {\n                \"type\": \"object\",\n                \"description\": \"createdBy\"\n              },\n              \"shareStatus\": {\n                \"type\": \"string\",\n                \"description\": \"shareStatus\"\n              },\n              \"verificationInterval\": {\n                \"type\": \"integer\",\n                \"description\": \"verificationInterval\"\n              },\n              \"cardTitle\": {\n                \"type\": \"string\",\n                \"description\": \"cardTitle\"\n              },\n              \"contentSchemaVersion\": {\n                \"type\": \"string\",\n                \"description\": \"contentSchemaVersion\"\n              },\n              \"templateTitle\": {\n                \"type\": \"string\",\n                \"description\": \"templateTitle\"\n              },\n              \"cardVerifier\": {\n                \"type\": \"object\",\n                \"description\": \"cardVerifier\"\n              },\n              \"description\": {\n                \"type\": \"string\",\n                \"description\": \"description\"\n              },\n              \"tags\": {\n                \"type\": \"array\",\n                \"description\": \"tags\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/templates/getTemplate\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"templateId\": {\n            \"description\": \"The ID of the card template\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"templateId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/templates/updateTemplate\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"templateId\": {\n            \"description\": \"The ID of the card template\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Card template information\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"content\": {\n                \"type\": \"string\",\n                \"description\": \"content\"\n              },\n              \"lastModified\": {\n                \"type\": \"string\",\n                \"description\": \"lastModified\"\n              },\n              \"collection\": {\n                \"type\": \"object\",\n                \"description\": \"collection\"\n              },\n              \"dateCreated\": {\n                \"type\": \"string\",\n                \"description\": \"dateCreated\"\n              },\n              \"boards\": {\n                \"type\": \"array\",\n                \"description\": \"boards\"\n              },\n              \"lastModifiedBy\": {\n                \"type\": \"object\",\n                \"description\": \"lastModifiedBy\"\n              },\n              \"jsonContent\": {\n                \"type\": \"string\",\n                \"description\": \"jsonContent\"\n              },\n              \"createdBy\": {\n                \"type\": \"object\",\n                \"description\": \"createdBy\"\n              },\n              \"shareStatus\": {\n                \"type\": \"string\",\n                \"description\": \"shareStatus\"\n              },\n              \"verificationInterval\": {\n                \"type\": \"integer\",\n                \"description\": \"verificationInterval\"\n              },\n              \"cardTitle\": {\n                \"type\": \"string\",\n                \"description\": \"cardTitle\"\n              },\n              \"contentSchemaVersion\": {\n                \"type\": \"string\",\n                \"description\": \"contentSchemaVersion\"\n              },\n              \"templateTitle\": {\n                \"type\": \"string\",\n                \"description\": \"templateTitle\"\n              },\n              \"cardVerifier\": {\n                \"type\": \"object\",\n                \"description\": \"cardVerifier\"\n              },\n              \"description\": {\n                \"type\": \"string\",\n                \"description\": \"description\"\n              },\n              \"tags\": {\n                \"type\": \"array\",\n                \"description\": \"tags\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"templateId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/templates/deleteTemplate\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"templateId\": {\n            \"description\": \"The ID of the card template\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"templateId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/groups/getUserGroups\",\n      \"description\": \"Returns all groups on the team.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"search\": {\n            \"description\": \"Search term\",\n            \"type\": \"string\"\n          },\n          \"sortField\": {\n            \"description\": \"Sort field\",\n            \"type\": \"string\"\n          },\n          \"sortDir\": {\n            \"description\": \"Sort direction\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"get:/v1/groups/getCollections\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"groupId\": {\n            \"description\": \"groupId\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"groupId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/groups/getGroupMembers\",\n      \"description\": \"Returns all group members.  A maximum of 100 group members will be returned.  If more than 100 group members exist, a link to the next page of results will be included in the Link header\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"groupId\": {\n            \"description\": \"The ID of the group\",\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"search\": {\n            \"description\": \"Search Term\",\n            \"type\": \"string\"\n          },\n          \"sortField\": {\n            \"description\": \"Sort Field\",\n            \"type\": \"string\"\n          },\n          \"sortDir\": {\n            \"description\": \"Sort Order\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"groupId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/groups/createUserGroupMember\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"groupId\": {\n            \"description\": \"The ID of the group\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"List of user group members\",\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"groupId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/groups/deleteUserGroupMember\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"groupId\": {\n            \"description\": \"groupId\",\n            \"type\": \"string\"\n          },\n          \"memberId\": {\n            \"description\": \"memberId\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"groupId\",\n          \"memberId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/users/getFollowers\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"description\": \"User ID\",\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"sortField\": {\n            \"description\": \"Sort field\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"firstName\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastName\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"followedDate\"\n              }\n            ]\n          },\n          \"sortOrder\": {\n            \"description\": \"Sort order\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ASC\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"DESC\"\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"userId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/users/getFollowing\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"description\": \"User ID\",\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"description\": \"Paging token\",\n            \"type\": \"string\"\n          },\n          \"sortField\": {\n            \"description\": \"Sort field\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"firstName\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"lastName\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"followedDate\"\n              }\n            ]\n          },\n          \"sortOrder\": {\n            \"description\": \"Sort order\",\n            \"type\": \"string\",\n            \"enum\": [\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"ASC\"\n              },\n              {\n                \"PrimitiveType\": 4,\n                \"AnyType\": 0,\n                \"Value\": \"DESC\"\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"userId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/whoami/whoAmI\",\n      \"description\": \"Get basic information about the authenticated user or collection, including their team, and their authentication token\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      }\n    },\n    {\n      \"name\": \"get:/v1/widgets/getWidgets\",\n      \"description\": \"GET /api/v1/widgets\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      }\n    },\n    {\n      \"name\": \"put:/v1/widgets/updateWidget\",\n      \"description\": \"PUT /api/v1/widgets/{widgetId}\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"widgetId\": {\n            \"description\": \"ID of the Widget\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Widget data\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"type\"\n              },\n              \"dateCreated\": {\n                \"type\": \"string\",\n                \"description\": \"dateCreated\"\n              },\n              \"dateLastUpdated\": {\n                \"type\": \"string\",\n                \"description\": \"dateLastUpdated\"\n              },\n              \"lastUpdatedBy\": {\n                \"type\": \"string\",\n                \"description\": \"lastUpdatedBy\"\n              },\n              \"visible\": {\n                \"type\": \"boolean\",\n                \"description\": \"visible\"\n              }\n            },\n            \"required\": [\n              \"type\"\n            ]\n          }\n        },\n        \"required\": [\n          \"widgetId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"post:/v1/widgets/uploadWidgetImage\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"widgetId\": {\n            \"description\": \"ID of the Widget\",\n            \"type\": \"string\"\n          },\n          \"imageId\": {\n            \"description\": \"ID of the image location\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"widgetId\",\n          \"imageId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/widgets/removeWidgetImageByWidgetId\",\n      \"description\": \"DELETE /api/v1/widgets/{widgetId}/widgetimage/{imageId}\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"widgetId\": {\n            \"description\": \"ID of the Widget\",\n            \"type\": \"string\"\n          },\n          \"imageId\": {\n            \"description\": \"ID of the image location\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"widgetId\",\n          \"imageId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"get:/v1/workspaces/getWorkspacePermissions\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      }\n    },\n    {\n      \"name\": \"post:/v1/workspaces/createWorkspacePermission\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"Request body\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"group\": {\n                \"type\": \"object\",\n                \"description\": \"group\"\n              },\n              \"objectRole\": {\n                \"type\": \"object\",\n                \"description\": \"objectRole\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"put:/v1/workspaces/updateWorkspacePermission\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"permissionId\": {\n            \"description\": \"The ID of the permission record\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Workspace permission\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"id\"\n              },\n              \"group\": {\n                \"type\": \"object\",\n                \"description\": \"group\"\n              },\n              \"objectRole\": {\n                \"type\": \"object\",\n                \"description\": \"objectRole\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"permissionId\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"delete:/v1/workspaces/deleteWorkspacePermission\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"permissionId\": {\n            \"description\": \"The ID of the permission record\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"permissionId\"\n        ]\n      }\n    }\n  ]\n}","contentHash":"e18c40bd659b0a51d44e674c50787e2d57916053b04efc5a2d2ea1fa6d27c996","sourceMap":null,"diagnostics":{"warnings":["OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found.","OpenAPI Warning: Data and type mismatch found."],"processingSteps":["Starting conversion from URL: https://api.getguru.com/api/v1/swagger.json","Trying common Swagger/OpenAPI endpoints","Fetching Swagger JSON from: https://api.getguru.com/api/v1/swagger.json","Swagger document fetched successfully (382771 bytes)","Swagger document parsed successfully (format: OpenApi2_0, 99 paths)","Converting Swagger to MCP JSON","Conversion completed successfully"],"performanceMetrics":{"FetchTime":1230.7903,"ParseTime":89.243,"ConversionTime":21.806100000000015,"TotalTime":1342.059}},"timestamp":"2025-04-24T17:20:08.539173Z"}

✅ SUCCESS
Diagnostic steps:
Starting conversion from URL: https://api.getguru.com/api/v1/swagger.json
Trying common Swagger/OpenAPI endpoints
Fetching Swagger JSON from: https://api.getguru.com/api/v1/swagger.json
Swagger document fetched successfully (382771 bytes)
Swagger document parsed successfully (format: OpenApi2_0, 99 paths)
Converting Swagger to MCP JSON
Conversion completed successfully
