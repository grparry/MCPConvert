ENDPOINT: Swagger Petstore UI - https://petstore.swagger.io/
----------------------------------------
RESPONSE:
{"success":true,"errorMessage":null,"mcpJson":"{\n  \"schema\": \"mcp\",\n  \"version\": \"0.1.0\",\n  \"metadata\": {\n    \"title\": \"Swagger Petstore\",\n    \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\n    \"version\": \"1.0.7\"\n  },\n  \"tools\": [\n    {\n      \"name\": \"uploadFile\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"petId\": {\n            \"description\": \"ID of pet to update\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"petId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"updatePet\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"Pet object that needs to be added to the store\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"id\"\n              },\n              \"category\": {\n                \"type\": \"object\",\n                \"description\": \"category\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"name\"\n              },\n              \"photoUrls\": {\n                \"type\": \"array\",\n                \"description\": \"photoUrls\"\n              },\n              \"tags\": {\n                \"type\": \"array\",\n                \"description\": \"tags\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"pet status in the store\"\n              }\n            },\n            \"required\": [\n              \"name\",\n              \"photoUrls\"\n            ]\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"addPet\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"Pet object that needs to be added to the store\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"id\"\n              },\n              \"category\": {\n                \"type\": \"object\",\n                \"description\": \"category\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"name\"\n              },\n              \"photoUrls\": {\n                \"type\": \"array\",\n                \"description\": \"photoUrls\"\n              },\n              \"tags\": {\n                \"type\": \"array\",\n                \"description\": \"tags\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"pet status in the store\"\n              }\n            },\n            \"required\": [\n              \"name\",\n              \"photoUrls\"\n            ]\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"findPetsByStatus\",\n      \"description\": \"Multiple status values can be provided with comma separated strings\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"description\": \"Status values that need to be considered for filter\",\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"status\"\n        ]\n      }\n    },\n    {\n      \"name\": \"findPetsByTags\",\n      \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tags\": {\n            \"description\": \"Tags to filter by\",\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"tags\"\n        ]\n      }\n    },\n    {\n      \"name\": \"getPetById\",\n      \"description\": \"Returns a single pet\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"petId\": {\n            \"description\": \"ID of pet to return\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"petId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"updatePetWithForm\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"petId\": {\n            \"description\": \"ID of pet that needs to be updated\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"petId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"deletePet\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"petId\": {\n            \"description\": \"Pet id to delete\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"petId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"getInventory\",\n      \"description\": \"Returns a map of status codes to quantities\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      }\n    },\n    {\n      \"name\": \"placeOrder\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"order placed for purchasing the pet\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"id\"\n              },\n              \"petId\": {\n                \"type\": \"integer\",\n                \"description\": \"petId\"\n              },\n              \"quantity\": {\n                \"type\": \"integer\",\n                \"description\": \"quantity\"\n              },\n              \"shipDate\": {\n                \"type\": \"string\",\n                \"description\": \"shipDate\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"Order Status\"\n              },\n              \"complete\": {\n                \"type\": \"boolean\",\n                \"description\": \"complete\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"getOrderById\",\n      \"description\": \"For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"orderId\": {\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"orderId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"deleteOrder\",\n      \"description\": \"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"orderId\": {\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"orderId\"\n        ]\n      }\n    },\n    {\n      \"name\": \"createUsersWithListInput\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"List of user object\",\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"getUserByName\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"username\"\n        ]\n      }\n    },\n    {\n      \"name\": \"updateUser\",\n      \"description\": \"This can only be done by the logged in user.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"description\": \"name that need to be updated\",\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"description\": \"Updated user object\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"id\"\n              },\n              \"username\": {\n                \"type\": \"string\",\n                \"description\": \"username\"\n              },\n              \"firstName\": {\n                \"type\": \"string\",\n                \"description\": \"firstName\"\n              },\n              \"lastName\": {\n                \"type\": \"string\",\n                \"description\": \"lastName\"\n              },\n              \"email\": {\n                \"type\": \"string\",\n                \"description\": \"email\"\n              },\n              \"password\": {\n                \"type\": \"string\",\n                \"description\": \"password\"\n              },\n              \"phone\": {\n                \"type\": \"string\",\n                \"description\": \"phone\"\n              },\n              \"userStatus\": {\n                \"type\": \"integer\",\n                \"description\": \"User Status\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"username\",\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"deleteUser\",\n      \"description\": \"This can only be done by the logged in user.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"description\": \"The name that needs to be deleted\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"username\"\n        ]\n      }\n    },\n    {\n      \"name\": \"loginUser\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"description\": \"The user name for login\",\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"description\": \"The password for login in clear text\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"username\",\n          \"password\"\n        ]\n      }\n    },\n    {\n      \"name\": \"logoutUser\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      }\n    },\n    {\n      \"name\": \"createUsersWithArrayInput\",\n      \"description\": \"\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"List of user object\",\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    },\n    {\n      \"name\": \"createUser\",\n      \"description\": \"This can only be done by the logged in user.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"description\": \"Created user object\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"id\"\n              },\n              \"username\": {\n                \"type\": \"string\",\n                \"description\": \"username\"\n              },\n              \"firstName\": {\n                \"type\": \"string\",\n                \"description\": \"firstName\"\n              },\n              \"lastName\": {\n                \"type\": \"string\",\n                \"description\": \"lastName\"\n              },\n              \"email\": {\n                \"type\": \"string\",\n                \"description\": \"email\"\n              },\n              \"password\": {\n                \"type\": \"string\",\n                \"description\": \"password\"\n              },\n              \"phone\": {\n                \"type\": \"string\",\n                \"description\": \"phone\"\n              },\n              \"userStatus\": {\n                \"type\": \"integer\",\n                \"description\": \"User Status\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"body\"\n        ]\n      }\n    }\n  ]\n}","contentHash":"8e08770786c39685860e2989e3881844ee7828d41dfddcf59e3a47d4e60a2ad6","sourceMap":null,"diagnostics":{"warnings":[],"processingSteps":["Starting conversion from URL: https://petstore.swagger.io/","Detected Swagger UI URL, attempting to find JSON endpoint","Found Swagger JSON URL from ossServices mapping: https://petstore.swagger.io/v2/swagger.json","Fetching Swagger JSON from: https://petstore.swagger.io/v2/swagger.json","Swagger document fetched successfully (13843 bytes)","Swagger document parsed successfully (format: OpenApi2_0, 14 paths)","Converting Swagger to MCP JSON","Conversion completed successfully"],"performanceMetrics":{"FetchTime":183.0957,"ParseTime":5.6698,"ConversionTime":0.27080000000000837,"TotalTime":189.1096}},"timestamp":"2025-04-24T17:19:38.977238Z"}

✅ SUCCESS
Diagnostic steps:
Starting conversion from URL: https://petstore.swagger.io/
Detected Swagger UI URL, attempting to find JSON endpoint
Found Swagger JSON URL from ossServices mapping: https://petstore.swagger.io/v2/swagger.json
Fetching Swagger JSON from: https://petstore.swagger.io/v2/swagger.json
Swagger document fetched successfully (13843 bytes)
Swagger document parsed successfully (format: OpenApi2_0, 14 paths)
Converting Swagger to MCP JSON
Conversion completed successfully
